var cloneThreat,cloneAction;angular.module("spaceAlertModule",["ngAnimate","ngSanitize","ui.bootstrap","cfp.hotkeys","ngRoute"]).config(["$routeProvider",function(n){n.when("/Input",{templateUrl:"templates/Input",controller:"InputController",resolve:{inputData:["$http",function(n){return n.get("NewGameInput").then(function(n){return n.data})}]}}).when("/Manual",{templateUrl:"templates/Manual",controller:"ManualController"}).when("/Error",{templateUrl:"templates/Error"}).when("/ReportBug",{templateUrl:"templates/ReportBug",controller:"ReportBugController"}).when("/Resolution",{templateUrl:"templates/Resolution",controller:"ResolutionController",resolve:{gameData:["$location","$http","newGameData",function(n,t,i){return i.canCreateGame()?t({url:"ProcessGame",method:"POST",data:i.manualData||i.getGameArgs(),headers:{"Content-Type":"application/json"}}).then(function(n){return n.data},function(){t({url:"SendGameMessage?senderEmailAddress=",method:"POST",data:{messageText:"Submitted data: "+JSON.stringify(i.manualData||i.getGameArgs())},headers:{"Content-Type":"application/json"}});n.path("/Error")}):(n.path("/"),null)}]}}).otherwise({redirectTo:"/Input"})}]);angular.module("spaceAlertModule").controller("InputController",["$scope","$uibModal","inputData","newGameData",function(n,t,i,r){n.allTracks=i.tracks;n.newGameData=r;n.playerSpecializations=i.playerSpecializations;n.$watch("newGameData.selectedTracks.redTrack",function(n){(r.updateAllSelectedTracks(),n)&&(r.checkDuplicateWhiteTrack(n),r.checkDuplicateBlueTrack(n),r.checkDuplicateInternalTrack(n))});n.$watch("newGameData.selectedTracks.whiteTrack",function(n){(r.updateAllSelectedTracks(),n)&&(r.checkDuplicateRedTrack(n),r.checkDuplicateBlueTrack(n),r.checkDuplicateInternalTrack(n))});n.$watch("newGameData.selectedTracks.blueTrack",function(n){(r.updateAllSelectedTracks(),n)&&(r.checkDuplicateRedTrack(n),r.checkDuplicateWhiteTrack(n),r.checkDuplicateInternalTrack(n))});n.$watch("newGameData.selectedTracks.internalTrack",function(n){(r.updateAllSelectedTracks(),n)&&(r.checkDuplicateRedTrack(n),r.checkDuplicateWhiteTrack(n),r.checkDuplicateBlueTrack(n))});n.allInternalThreats=i.allInternalThreats;n.allExternalThreats=i.allExternalThreats;n.$watchCollection("newGameData.selectedThreats.redThreats",function(){r.updateAllSelectedExternalThreats();r.updateAllSelectedThreats()});n.$watchCollection("newGameData.selectedThreats.whiteThreats",function(){r.updateAllSelectedExternalThreats();r.updateAllSelectedThreats()});n.$watchCollection("newGameData.selectedThreats.blueThreats",function(){r.updateAllSelectedExternalThreats();r.updateAllSelectedThreats()});n.$watchCollection("newGameData.selectedThreats.internalThreats",function(){r.updateAllSelectedThreats()});n.allSingleActions=i.singleActions;n.allDoubleActions=i.doubleActions;n.specializationActions=i.specializationActions;n.$watch("newGameData.selectedPlayerCountRadio.model",function(n){r.selectPlayerCount(n)});r.players.forEach(function(t,i){n.$watch(function(){return r.players[i].color.model},function(n,t){r.players.forEach(function(r,u){i!==u&&r.color.model===n&&(r.color.model=t)})})});n.allDamageTokens=i.allDamageTokens;n.damageableZones=i.damageableZones;n.damageableZones.forEach(function(n){r.damage[n]==null&&(r.damage[n]={})});var u=function(n,i,r){var u=t.open({animation:!0,templateUrl:"templates/threatsModal",controller:"ThreatsModalInstanceCtrl",size:"lg",resolve:{allThreats:function(){return i},allUsedThreats:function(){return r},zone:function(){return""},threatAppearsNormally:function(){return!1}}});u.result.then(n)};n.setCalledInExternalThreat=function(t){u(function(n){t.bonusExternalThreat=n},n.allExternalThreats,n.newGameData.allSelectedExternalThreats)};n.setCalledInInternalThreat=function(t){u(function(n){t.bonusInternalThreat=n},n.allInternalThreats,n.newGameData.allSelectedInternalThreats)};n.clearBonusThreat=function(n){n.bonusExternalThreat=null;n.bonusInternalThreat=null};n.anyThreatsCallInBonusThreats=function(){return _.some(r.allSelectedThreats,function(n){return n.needsBonusExternalThreat||n.needsBonusInternalThreat})};n.animationsEnabled=!0;n.openActionsDialog=function(i,u){t.open({animation:!0,templateUrl:"templates/actionsModal",controller:"ActionsModalInstanceCtrl",size:u,resolve:{player:function(){return i},allSingleActions:function(){return n.allSingleActions},allDoubleActions:function(){return n.allDoubleActions},useDoubleActions:function(){return r.useDoubleActions},playerSpecializationActions:function(){return n.specializationActions.filter(function(n){return n.playerSpecialization===i.playerSpecialization})},useSpecializations:function(){return r.useSpecializations&&i.playerSpecialization!=null}}})}}]);angular.module("spaceAlertModule").controller("ManualController",["$scope","newGameData",function(n,t){n.newGameData=t}]);angular.module("spaceAlertModule").controller("ReportBugController",["$scope","newGameData","$location","$http",function(n,t,i,r){const u=t.manualData||t.getGameArgs();n.includeGameData=!!u;n.submitBug=function(){var t="";const f=n.problem!=null;f&&(t+="User report: "+n.problem+"\r\n");n.includeGameData&&(t+="Game data: "+JSON.stringify(u));const e=n.includeGameData||f;if(e){const u=n.email!=null;r({url:"SendGameMessage?senderEmailAddress="+(u?n.email:""),method:"POST",data:{messageText:t},headers:{"Content-Type":"application/json"}});i.path("/#")}}}]);angular.module("spaceAlertModule").controller("ResolutionController",["$scope","gameData","$interval","$animate","$uibModal",function(n,t,i,r,u){var a;if(t){r.enabled(!1);n.gameData=t;a=n.gameData.length;n.playing=null;n.turnsPerTwoSeconds=5;let s=0,e=0,c=0;var f=function(){n.playing!=null&&(i.cancel(n.playing),n.playing=null)},l=function(n){c=n},h=function(n){s=n;l(0)},o=function(n){e=n;h(0)},v=function(){n.playing=i(function(){n.isAtLastSubPhase()?n.isAtLastPhase()?n.isAtLastTurn()?f():o(e+1):h(s+1):l(c+1)},2e3/n.turnsPerTwoSeconds)};n.$watch("turnsPerTwoSeconds",function(){n.playing!=null&&(f(),v())});n.isAtFirstSubPhase=function(){return c===0};n.isAtFirstPhase=function(){return s===0};n.isAtFirstTurn=function(){return e===0};n.isAtLastSubPhase=function(){return c===n.getCurrentPhase().subPhases.length-1};n.isAtLastPhase=function(){return s===n.getCurrentTurn().phases.length-1};n.isAtLastTurn=function(){return e===a-1};n.getCurrentTurn=function(){return n.gameData[e]};n.getCurrentPhase=function(){return n.getCurrentTurn().phases[s]};n.getCurrentSubPhase=function(){return n.getCurrentPhase().subPhases[c]};n.goBackOneSubPhase=function(){f();n.isAtFirstSubPhase()?n.isAtFirstPhase()?n.isAtFirstTurn()||(o(e-1),h(n.getCurrentTurn().phases.length-1),l(n.getCurrentPhase().subPhases.length-1)):(h(s-1),l(n.getCurrentPhase().subPhases.length-1)):l(c-1)};n.goForwardOneSubPhase=function(){f();n.isAtLastSubPhase()?n.isAtLastPhase()?n.isAtLastTurn()||o(e+1):h(s+1):l(c+1)};n.goBackOnePhase=function(){f();n.isAtFirstPhase()?n.isAtFirstTurn()||(o(e-1),h(n.getCurrentTurn().phases.length-1)):h(s-1)};n.goForwardOnePhase=function(){f();n.isAtLastPhase()?n.isAtLastTurn()||o(e+1):h(s+1)};n.goBackOneTurn=function(){f();n.isAtFirstTurn()||o(e-1)};n.goForwardOneTurn=function(){f();n.isAtLastTurn()||o(e+1)};n.playPause=function(){n.playing?f():v()};n.goToStart=function(){f();o(0)};n.goToEnd=function(){f();o(a-1);h(n.getCurrentTurn().phases.length-1);l(n.getCurrentPhase().subPhases.length-1)};n.$on("$destroy",function(){f()});n.getActionCursor=function(){return e};n.openDamageDialog=function(t){f();u.open({animation:!0,templateUrl:"templates/damageModal",controller:"DamageModalInstanceCtrl",size:t,resolve:{redDamage:function(){return n.getCurrentSubPhase().redZone.unusedDamage},blueDamage:function(){return n.getCurrentSubPhase().blueZone.unusedDamage},whiteDamage:function(){return n.getCurrentSubPhase().whiteZone.unusedDamage}}})};o(0)}}]);angular.module("spaceAlertModule").directive("bonusThreatEntry",function(){return{templateUrl:"templates/bonusThreatEntry",restrict:"E",scope:{threat:"=",bonusThreat:"=",setBonusThreat:"&",clearBonusThreat:"&"},controller:["$scope",function(n){n.removeThreat=function(){n.clearBonusThreat()}}]}});angular.module("spaceAlertModule").directive("playerBoard",function(){return{templateUrl:"templates/playerBoard",restrict:"E",scope:{immutableCursor:"=",cursor:"=",selectedActions:"=",playerColor:"=",smallBoard:"="},controller:["$scope",function(n){n.moveCursor=function(t){n.cursor&&!n.immutableCursor&&(n.cursor.index=t,n.cursor.actionIndex=0,n.cursor.errorMessage=null)}}]}});angular.module("spaceAlertModule").directive("routeLoadingIndicator",["$rootScope",function(n){return{restrict:"E",templateUrl:"templates/loading",link:function(t){t.isRouteLoading=!1;n.$on("$routeChangeStart",function(){t.isRouteLoading=!0});n.$on("$routeChangeSuccess",function(){t.isRouteLoading=!1})}}}]);angular.module("spaceAlertModule").directive("standardZone",function(){return{templateUrl:"templates/standardZone",restrict:"E",scope:{zone:"=",zoneId:"="}}});angular.module("spaceAlertModule").directive("threat",function(){return{templateUrl:"templates/threat",restrict:"E",scope:{threatIndex:"=",threat:"=",trackId:"=",removable:"=",removeThreat:"&?"}}});angular.module("spaceAlertModule").directive("track",function(){return{templateUrl:"templates/track",restrict:"E",scope:{track:"=",trackId:"="}}});angular.module("spaceAlertModule").directive("trackWithThreats",function(){return{templateUrl:"templates/trackWithThreats",restrict:"E",scope:{track:"=",trackId:"=",zoneDescription:"=",allTracks:"=",allUsedTracks:"=",trackIsConfigurable:"=",threats:"=",allThreats:"=",allUsedThreats:"=",threatsAreConfigurable:"="},controller:["$scope","$uibModal",function(n,t){n.getThreatCornerX=function(t){var i=$("#threat"+n.trackId+t);return i.offset()?i.offset().left:0};n.getThreatCornerY=function(t){var i=$("#threat"+n.trackId+t);return i.offset()?i.offset().top:0};n.getTrackSpaceCornerX=function(t){var i=$("#space"+n.trackId+t.position);return i.offset()?i.offset().left+i.outerWidth()-1:0};n.getTrackSpaceCornerY=function(t){var i=$("#space"+n.trackId+t.position);return i.offset()?i.offset().top:0};n.getStationCornerX=function(n,t){var i=$("#"+t.toLowerCase()+"threats");return i.offset()?i.offset().left:0};n.getStationCornerY=function(n,t){var i=$("#"+t.toLowerCase()+"threats");return i.offset()?i.offset().top:0};n.configureTrack=function(){if(n.trackIsConfigurable){var i=t.open({animation:!0,templateUrl:"templates/trackModal",controller:"TrackModalInstanceCtrl",size:"lg",resolve:{currentTrack:function(){return n.track},allTracks:function(){return n.allTracks},zone:function(){return n.zoneDescription},usedTracks:function(){return n.allUsedTracks}}});i.result.then(function(t){n.track=t})}};n.addNewThreat=function(){if(n.threatsAreConfigurable){var i=t.open({animation:!0,templateUrl:"templates/threatsModal",controller:"ThreatsModalInstanceCtrl",size:"lg",resolve:{allThreats:function(){return n.allThreats},allUsedThreats:function(){return n.allUsedThreats},zone:function(){return n.zoneDescription},threatAppearsNormally:function(){return!0}}});i.result.then(function(t){n.threats.push(t)})}};n.showThreats=function(){return n.threats||n.threatsAreConfigurable};n.canAddNewThreat=function(){return n.threatsAreConfigurable&&n.threats.length<3};n.removeThreat=function(t){_.remove(n.threats,function(n){return n.id===t.id})}}]}});cloneAction=function(n){return{hotkey:n.hotkey,displayText:n.displayText,description:n.description,firstAction:n.firstAction,secondAction:n.secondAction}};angular.module("spaceAlertModule").controller("ActionsModalInstanceCtrl",["$uibModalInstance","$scope","player","allSingleActions","allDoubleActions","useDoubleActions","playerSpecializationActions","useSpecializations","hotkeys",function(n,t,i,r,u,f,e,o,s){t.useDoubleActions=f;t.useSpecializations=o;t.allSingleActions=r;t.allDoubleActions=u;t.playerSpecializationActions=e;t.selectedActions=i.actions.slice();t.playerColor=i.color.model;t.playerTitle=i.title;t.cursor={index:0};t.allSingleActions.concat(t.playerSpecializationActions).forEach(function(n){n.hotkey&&s.bindTo(t).add({combo:n.hotkey,description:n.displayText,callback:function(){t.addActionAtCursor(n)}})});t.addActionAtCursor=function(n){if(t.cursor.errorMessage=null,t.cursor.index<12)if((t.cursor.actionIndex||0)===0){t.selectedActions[t.cursor.index]=cloneAction(n);const i=t.useDoubleActions&&n.secondAction==null&&_.some(t.allDoubleActions,function(t){return t.firstAction===n.firstAction});i?t.cursor.actionIndex=1:(t.cursor.index++,t.cursor.actionIndex=0)}else if(n.firstAction===null)t.cursor.index++,t.cursor.actionIndex=0;else{var r=t.selectedActions[t.cursor.index].firstAction,u=n.firstAction,i=_.find(t.allDoubleActions,function(n){return n.firstAction===r&&n.secondAction===u});i?(t.selectedActions[t.cursor.index]=cloneAction(i),t.cursor.index++,t.cursor.actionIndex=0):t.cursor.errorMessage="Invalid double action: "+t.selectedActions[t.cursor.index].hotkey+" - "+n.hotkey}t.cursor.index===12&&(t.cursor.index=0)};t.addBonusActionAtCursor=function(n){t.selectedActions[t.cursor.index].bonusAction=n};t.ok=function(){i.actions=t.selectedActions;n.close()};t.cancel=function(){n.dismiss("cancel")}}]);angular.module("spaceAlertModule").controller("DamageModalInstanceCtrl",["$uibModalInstance","$scope","redDamage","whiteDamage","blueDamage",function(n,t,i,r,u){t.damageableZones=[{name:"Red",damage:i},{name:"Blue",damage:u},{name:"White",damage:r},];t.ok=function(){n.close()};t.cancel=function(){n.dismiss("cancel")}}]);cloneThreat=function(n){return{threatType:n.threatType,threatDifficulty:n.threatDifficulty,position:n.position,remainingHealth:n.remainingHealth,speed:n.speed,fileName:n.fileName,timeAppears:n.timeAppears,id:n.id,displayName:n.displayName,points:n.points,buffCount:n.buffCount,debuffCount:n.debuffCount,needsBonusExternalThreat:n.needsBonusExternalThreat,needsBonusInternalThreat:n.needsBonusInternalThreat,bonusInternalThreat:n.bonusInternalThreat,bonusExternalThreat:n.bonusExternalThreat,shields:n.shields,currentZone:n.currentZone,totalInaccessibility:n.totalInaccessibility,displayOnTrackStations:n.displayOnTrackStations}};angular.module("spaceAlertModule").controller("ThreatsModalInstanceCtrl",["$uibModalInstance","$scope","allThreats","allUsedThreats","zone","threatAppearsNormally",function(n,t,i,r,u,f){t.threatAppearsNormally=f;t.allTimes=[1,2,3,4,5,6,7,8,9,10,11,12];t.allThreats=i;t.zone=u;t.allUsedThreats=r;t.$watch("threatsGroupedByType",function(n){t.threatsToChooseFrom=n.minorThreats});t.$watch("threatsToChooseFrom",function(){t.selectedThreatToAdd=null;t.selectedTimeOfThreatToAdd=null});t.threatsGroupedByType=i.whiteThreats;t.selectThreatToAdd=function(n){t.selectedThreatToAdd=n};t.getAvailableThreats=function(){return _.differenceBy(t.threatsToChooseFrom,t.allUsedThreats,"id")};t.ok=function(){var i=cloneThreat(t.selectedThreatToAdd);i.timeAppears=t.selectedTimeOfThreatToAdd;n.close(i)};t.cancel=function(){n.dismiss("cancel")}}]);angular.module("spaceAlertModule").controller("TrackModalInstanceCtrl",["$uibModalInstance","$scope","currentTrack","allTracks","zone","usedTracks",function(n,t,i,r,u,f){t.selectedTrack=i;t.allTracks=r;t.zone=u;t.usedTracks=f;t.trackIsInUse=function(n){if(t.selectedTrack===n)return!1;for(var i=0;i<t.usedTracks.length;i++)if(t.usedTracks[i]===n)return!0;return!1};t.selectTrack=function(i){t.selectedTrack=i;n.close(t.selectedTrack)};t.cancel=function(){n.dismiss("cancel")}}]);cloneAction=function(n){return{hotkey:n.hotkey,displayText:n.displayText,description:n.description,firstAction:n.firstAction,secondAction:n.secondAction}};angular.module("spaceAlertModule").factory("newGameData",function(){var n={};return n.initialize=function(){n.selectedTracks={redTrack:null,whiteTrack:null,blueTrack:null,internalTrack:null};n.selectedThreats={redThreats:[],whiteThreats:[],blueThreats:[],internalThreats:[]};n.damage={};n.updateAllSelectedTracks=function(){n.allSelectedTracks=[n.selectedTracks.redTrack,n.selectedTracks.whiteTrack,n.selectedTracks.blueTrack,n.selectedTracks.internalTrack]};n.updateAllSelectedTracks();n.checkDuplicateRedTrack=function(t){n.selectedTracks.redTrack===t&&(n.selectedTracks.redTrack=null)};n.checkDuplicateWhiteTrack=function(t){n.selectedTracks.whiteTrack===t&&(n.selectedTracks.whiteTrack=null)};n.checkDuplicateBlueTrack=function(t){n.selectedTracks.blueTrack===t&&(n.selectedTracks.blueTrack=null)};n.checkDuplicateInternalTrack=function(t){n.selectedTracks.internalTrack===t&&(n.selectedTracks.internalTrack=null)};n.updateAllSelectedExternalThreats=function(){n.allSelectedExternalThreats=[].concat(n.selectedThreats.redThreats).concat(n.selectedThreats.whiteThreats).concat(n.selectedThreats.blueThreats)};n.updateAllSelectedThreats=function(){n.allSelectedThreats=[].concat(n.selectedThreats.redThreats).concat(n.selectedThreats.whiteThreats).concat(n.selectedThreats.blueThreats).concat(n.selectedThreats.internalThreats)};n.colors=["blue","green","red","yellow","purple"];n.playerCounts=[1,2,3,4,5];n.players=[{title:"Captain",color:{model:n.colors[0]},actions:_.map(_.range(12),function(){return{}})},{title:"Player 2",color:{model:n.colors[1]},actions:_.map(_.range(12),function(){return{}})},{title:"Player 3",color:{model:n.colors[2]},actions:_.map(_.range(12),function(){return{}})},{title:"Player 4",color:{model:n.colors[3]},actions:_.map(_.range(12),function(){return{}})},{title:"Player 5",color:{model:n.colors[4]},actions:_.map(_.range(12),function(){return{}})}];n.selectPlayerCount=function(t){n.selectedPlayerCountRadio={model:t};n.players.forEach(function(n,i){n.isInGame=i<t})};n.selectPlayerCount(4);n.initializeFromGameArgs=function(t){var i=JSON.parse(t),r,u,f;for(n.selectedThreats.redThreats=i.redThreats,n.selectedThreats.whiteThreats=i.whiteThreats,n.selectedThreats.blueThreats=i.blueThreats,n.selectedThreats.internalThreats=i.internalThreats,n.selectedTracks.redTrack=i.redTrack,n.selectedTracks.whiteTrack=i.whiteTrack,n.selectedTracks.blueTrack=i.blueTrack,n.selectedTracks.internalTrack=i.internalTrack,r=0;r<n.players.length;r++)r<i.players.length&&(u=n.players[r],f=i.players[r],u.isInGame=!0,u.color.model=n.colors[f.playerColor],u.actions=f.actions,u.playerSpecialization=f.playerSpecialization)};n.getGameArgs=function(){var t,i,u;if(!n.canCreateGame())return"";var f=_.filter(n.players,{isInGame:!0}),e=_.map(f,function(t,i){return{actions:t.actions,index:i,playerColor:_.findIndex(n.colors,function(n){return n===t.color.model}),playerSpecialization:t.playerSpecialization}}),r=[];for(t in n.damage)if(n.damage.hasOwnProperty(t))for(i in n.damage[t])n.damage[t].hasOwnProperty(i)&&(u=n.damage[t][i],u&&r.push({zoneLocation:t,damageToken:i}));return{players:e,redThreats:n.selectedThreats.redThreats,whiteThreats:n.selectedThreats.whiteThreats,blueThreats:n.selectedThreats.blueThreats,internalThreats:n.selectedThreats.internalThreats,redTrack:n.selectedTracks.redTrack,whiteTrack:n.selectedTracks.whiteTrack,blueTrack:n.selectedTracks.blueTrack,internalTrack:n.selectedTracks.internalTrack,initialDamageModels:r}};n.isMissingBonusThreats=function(){return _.some(n.allSelectedThreats,function(n){return n.needsBonusExternalThreat&&n.bonusExternalThreat==null||n.needsBonusInternalThreat&&n.bonusInternalThreat==null})};n.canCreateGame=function(){return n.manualData||!n.isMissingBonusThreats()&&n.selectedTracks.redTrack!=null&&n.selectedTracks.whiteTrack!=null&&n.selectedTracks.blueTrack!=null&&n.selectedTracks.internalTrack!=null};n.setManualData=function(t){n.manualData=t}},n.initialize(),n});